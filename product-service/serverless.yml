service: product-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: development
  region: eu-west-1

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - arn:aws:dynamodb:eu-west-1:726228754629:table/*
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        - Fn::GetAtt: [SQSQueue, Arn]
    - Effect: Allow
      Action: sns:*
      Resource:
        Ref: SNSTopic
  environment:
    PRODUCTS_TABLE: products
    STOCKS_TABLE: stocks
    REGION: eu-west-1
    SQS_URL:
      Ref: SQSQueue
    SNS_ARN:
      Ref: SNSTopic

plugins:
  - serverless-webpack

package:
  individually: true

custom:
  webpack:
    includeModules: false
    webpackConfig: "webpack.config.cjs" # Name of webpack configuration file

functions:
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true

  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true

  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: product/{id}
          method: get
          cors: true

  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn
resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: products

    StocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: product_id
            AttributeType: S
        KeySchema:
          - AttributeName: product_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: stocks
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: catalogItemsQueue
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: createProductTopic
        DisplayName: SNS Topic

    SNSSubscription1:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: bembi.info@gmail.com
        Protocol: email
        TopicArn: !Ref SNSTopic
        FilterPolicyScope: MessageBody
        FilterPolicy: '{"title": [{"prefix": "test-"}]}'

    SNSSubscription2:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: natallia.belavusava@gmail.com
        Protocol: email
        TopicArn: !Ref SNSTopic
        FilterPolicyScope: MessageBody
        FilterPolicy: '{"title": [{"anything-but": {"prefix": "test-"}}]}'

